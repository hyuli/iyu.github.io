{"meta":{"title":"無稽閣","subtitle":null,"description":null,"author":"Robin Li","url":"http://www.iyu.io"},"pages":[{"title":"About","date":"2016-04-22T03:59:15.000Z","updated":"2016-04-22T02:41:53.000Z","comments":true,"path":"about/index.html","permalink":"http://www.iyu.io/about/index.html","excerpt":"","keywords":null,"text":"The blog theme you may fall in love with, coming to Hexo. Preview InstallationInstall1$ git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus Icarus requires Hexo 3.0 and above. Enable Rename themes\\icarus\\_config.yml.example to themes\\icarus\\_config.yml; Copy themes\\icarus\\_config.yml.site.example to your hexo blog&#x2019;s root directory and rename it to _config.yml; Copy themes\\icarus\\_source\\* into your hexo blog&#x2019;s directory source; Then modify theme setting in _config.yml to icarus. Update12cd themes/icarusgit pull ConfigurationTheme configuration example1234567891011121314151617181920212223242526272829303132333435363738394041# Headermenu: Home: . Archives: archives Categories: categories # you need to add extra page to enable this, please see the config below. Tags: tags # you need to add extra page to enable this, please see the config below. About: about# Contentexcerpt_link: Read Morefancybox: true# Sidebarsidebar: rightwidgets:- recent_posts- category- tag- tagcloud- archivethumbnail: true# Contactscontacts: github: http://github.com/ppoffice/hexo-theme-icarus twitter: &apos;#&apos; facebook: &apos;#&apos; dribbble: &apos;#&apos; rss: atom.xml# Linkslinks: Hexo: http://hexo.io# Miscellaneousgoogle_analytics:favicon: favicon.pngtwitter:google_plus:fb_admins:fb_app_id: excerpt_link - Cooperate with &lt;!-- more --&gt; tag to show only part of the article in index pages. fancybox - Enable Fancybox. contacts - Your social network links, RSS link, etc. widgets - Widgets displaying in sidebar. thumbnail - Whether to show post thumbnails in the sidebar and archive pages. links - Links displayed in the link widget. google_analytics - Google Analytics ID. favicon - Favicon path. Site configuration example123456789101112131415# Sitetitle: Icarussubtitle:description: Hexo theme - Icarusauthor: PPOfficeauthor_title: &apos;Web Developer &amp; Designer&apos;avatar: css/images/avatar.pnglocation: &apos;Harbin, China&apos;language: entimezone:...# Disqusdisqus_shortname: author - Your name. author_title - Title to your occupation. avatar - Your avatar image link. location - Where you live in. disqus_shortname - Your Disqus shortname. Post Thumbnail &amp; BannerYou can add a thumbnail and a banner to each post by adding the following lines into your post source files&#x2019; front-matter:123456title: Demodate: 2015-01-01...# add thosethumbnail: http://example.com/thumbnail.jpgbanner: http://example.com/banner.jpg Custom Categories &amp; Tags PagesTo enable custom categories page and tags page, just copy the categories folder and tags folder under your theme&#x2019;s _source foler into your site&#x2019;s source folder. Then edit theme&#x2019;s _config.yml and add the following lines:123456# Headermenu: ... Categories: categories # -&gt; add this line Tags: tags # -&gt; and add this line ... LanguagesEnglish and Simplified Chinese are the default languages of the theme. You can add translations in the languages folder and change the default language in blog&#x2019;s _config.yml. 1language: zh-CN FeaturesProfile SidebarA nice place to show yourself. You can add your own information in your site&#x2019;s _config.yml Post Banner &amp; ThumbnailThanks to atika, you can now add thumbnails and banners to every post to create better reading experience. Responsive LayoutIcarus knows on what screen size you are browsering the website, and reorganize the layout to fit your device. Custom Categories &amp; Tags PagesGet your categories and tags listed in single pages to make your blog more methodic. FancyboxIcarus uses Fancybox to showcase your photos. You can use Markdown syntax or fancybox tag plugin to add your photos. 1![img caption](img url) SidebarIcarus provides 6 built-in widgets: recent_posts category archives tag tagcloud links All of them are enabled by default. You can edit them in widget setting. DevelopmentRequirements Grunt 0.4+ Hexo 3.0+ Grunt tasks default - Download Fancybox and Font Awesome. fontawesome - Only download Font Awesome. fancybox - Only download Fancybox. clean - Clean temporarily files and downloaded files.","raw":null,"content":null},{"title":"Tags","date":"2016-04-22T03:59:15.000Z","updated":"2016-04-22T02:41:53.000Z","comments":true,"path":"tags/index.html","permalink":"http://www.iyu.io/tags/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"Categories","date":"2016-04-22T03:59:15.000Z","updated":"2016-04-22T02:41:53.000Z","comments":true,"path":"categories/index.html","permalink":"http://www.iyu.io/categories/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null}],"posts":[{"title":"解析AbstractQueuedSynchronizer的实现","slug":"解析AbstractQueuedSynchronizer的实现","date":"2016-05-29T07:47:49.000Z","updated":"2016-05-29T09:54:03.000Z","comments":true,"path":"2016/05/29/解析AbstractQueuedSynchronizer的实现/","link":"","permalink":"http://www.iyu.io/2016/05/29/解析AbstractQueuedSynchronizer的实现/","excerpt":"","keywords":null,"text":"AbstractQueuedSynchronizer(AQS)&#x662F;Java&#x5E76;&#x53D1;&#x5305;&#x91CC;&#x9762;&#x5F88;&#x591A;&#x5DE5;&#x5177;&#x7C7B;&#x7684;&#x5B9E;&#x73B0;&#x57FA;&#x7840;&#xFF0C;&#x4E00;&#x76F4;&#x90FD;&#x60F3;&#x5F7B;&#x5E95;&#x7684;&#x4E86;&#x89E3;&#xFF0C;&#x56FA;&#x6709;&#x6B64;&#x6587;&#x7AE0;&#x6765;&#x52A0;&#x6DF1;&#x5BF9;&#x5176;&#x4E86;&#x89E3;&#x3002;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x62FF;&#x5176;&#x5B9E;&#x73B0;&#x7684;&#x5178;&#x578B;ReentrantLock&#x770B;&#x770B;&#x3002; ReentrantLock&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x8FD9;&#x6837;&#x6765;&#x4F7F;&#x7528;ReentrantLock&#x7684;1234reentrantLock.lock()//or reentrantLock.lockInterruptibly()//do stuff herereentrantLock.unlock() &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4FDD;&#x8BC1;&#x4E86;&#x540C;&#x65F6;&#x53EA;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5728;&#x6267;&#x884C;lock&#x5BF9;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x6765;&#x770B;lock()&#x65B9;&#x6CD5;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#x3002; 123public void lock() { sync.lock(); } &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x8C03;&#x7528;&#x4E86;FairSync&#x6216;&#x8005;NonfairSync&#x7684;lock()&#x65B9;&#x6CD5;, &#x4ECE;&#x4E0B;&#x56FE;&#x53EF;&#x770B;&#x51FA;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x7C7B;&#x90FD;&#x662F;AQS&#x7684;&#x5B50;&#x7C7B;&#x3002; &#x8FD9;&#x91CC;&#x5C31;&#x5F15;&#x7533;&#x51FA;&#x4E86;&#x4E24;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x516C;&#x5E73;&#x9501;&#x548C;&#x975E;&#x516C;&#x5E73;&#x9501;&#x3002; &#x516C;&#x5E73;&#x9501;&#xFF1A;&#x91C7;&#x7528;FIFO&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#xFF0C;&#x5148;&#x52A0;&#x5165;&#x7684;&#x9501;&#x961F;&#x5217;&#x5148;&#x83B7;&#x53D6;&#x9501;&#x3002; &#x975E;&#x516C;&#x5E73;&#x9501;&#xFF1A;&#x770B;&#x957F;&#x76F8;&#x6765;&#x51B3;&#x5B9A;&#x8C01;&#x5148;&#x83B7;&#x53D6;&#x9501;&#xFF0C;&#x4E0E;&#x52A0;&#x5165;&#x7684;&#x987A;&#x5E8F;&#x65E0;&#x5173;&#x3002; &#x7136;&#x540E;&#x5148;&#x6765;&#x770B;&#x516C;&#x5E73;&#x9501;(FairSync)&#x7684;&#x5B9E;&#x73B0;:&#x8C03;&#x7528;&#x4E86;acquire&#x65B9;&#x6CD5;,&#x4F20;&#x5165;&#x53C2;&#x6570;1&#x3002;123final void lock() { acquire(1); } &#x8FDB;&#x5165;acquire, &#x4ECE;&#x540D;&#x5B57;&#x4E0A;&#x731C;&#x6D4B;&#x663E;&#x793A;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x9501;&#xFF0C;&#x83B7;&#x53D6;&#x6210;&#x529F;&#x5C31;&#x8FD4;&#x56DE;&#x3002;&#x5426;&#x5219;&#x653E;&#x5165;&#x961F;&#x5217;&#x4E2D;&#xFF0C;acquireQueued&#x53EF;&#x80FD;&#x4F1A;&#x963B;&#x585E;&#xFF0C;&#x5982;&#x679C;&#x89E3;&#x9664;&#x963B;&#x585E;&#x540E;&#x4F1A;&#x8C03;&#x7528;selfInterrupt, &#x6700;&#x540E;&#x8FD4;&#x56DE;&#x3002;12345public final void acquire(int arg) { if (!tryAcquire(arg) &amp;&amp; acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) selfInterrupt(); } &#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B;tryAcquire(arg), &#x8BB0;&#x4F4F;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x4F20;&#x7684;&#x662F;1&#x3002;123456789101112131415161718192021protected final boolean tryAcquire(int acquires) { final Thread current = Thread.currentThread(); //&#x83B7;&#x53D6;&#x5F53;&#x524D;thread int c = getState(); //&#x83B7;&#x53D6;&#x7236;AQS&#x72B6;&#x6001;&#x4F4D; if (c == 0) { if (!hasQueuedPredecessors() &amp;&amp; //&#x5982;&#x679C;queue&#x91CC;&#x9762;&#x6CA1;&#x6709;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;,&#x8BF4;&#x660E;&#x6CA1;&#x6709;&#x7EBF;&#x7A0B;&#x6B63;&#x5728;&#x5360;&#x7528;&#x9501;&#x3002; compareAndSetState(0, acquires)) { //&#x7528;CAS&#x65B9;&#x5F0F;&#x8BBE;&#x5B9A;state&#x4E3A;acquires&#xFF0C; &#x4E5F;&#x5C31;&#x662F;&#x4F20;&#x8FC7;&#x6765;&#x7684;1&#x3002; setExclusiveOwnerThread(current); //&#x628A;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x8BBE;&#x5B9A;&#x5230;&#x7236;AQS&#x7684;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x8868;&#x793A;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6301;&#x6709;&#x9501;&#x3002; return true; } } else if (current == getExclusiveOwnerThread()) { //&#x5982;&#x679C;&#x5F53;&#x524D;&#x6301;&#x6709;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x518D;&#x6B21;&#x8BF7;&#x6C42;&#x83B7;&#x53D6;&#x9501;&#xFF0C;&#x5C31;&#x66F4;&#x6539;state int nextc = c + acquires; if (nextc &lt; 0) throw new Error(&quot;Maximum lock count exceeded&quot;); setState(nextc); return true; } return false;} &#x52A0;&#x5165;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x9501;&#x5931;&#x8D25;,&#x6211;&#x4EEC;&#x518D;&#x56DE;&#x5230;acquire&#x65B9;&#x6CD5;&#x3002;&#x65B9;&#x6CD5;addWaiter&#x56DE;&#x53BB;&#x5305;&#x88C5;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x3002;1234567891011121314151617private Node addWaiter(Node mode) { //&#x6784;&#x9020;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x72EC;&#x5360;&#x6A21;&#x5F0F;&#x7684;Node Node node = new Node(Thread.currentThread(), mode); // Try the fast path of enq; backup to full enq on failure Node pred = tail; //&#x7528;CAS&#x65B9;&#x5F0F;&#x5C06;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#x653E;&#x5728;&#x961F;&#x5217;&#x5C3E;&#x90E8;&#xFF0C;&#x5982;&#x679C;&#x4FEE;&#x6539;&#x5931;&#x8D25;&#xFF0C;&#x90A3;&#x4E48;&#x8BC1;&#x660E;&#x4EA7;&#x751F;&#x4E86;&#x5E76;&#x53D1;&#x4FEE;&#x6539;&#xFF0C;&#x8FDB;&#x5165;enq if (pred != null) { node.prev = pred; if (compareAndSetTail(pred, node)) { pred.next = node; return node; } } //&#x5982;&#x679C;&#x4EA7;&#x751F;&#x4E86;&#x7EBF;&#x7A0B;&#x95F4;&#x7684;&#x7ADE;&#x4E89;&#xFF0C;&#x90A3;&#x4E48;&#x91C7;&#x7528;&#x201C;&#x81EA;&#x65CB;&#x201D;&#x65B9;&#x5F0F;&#x5C06;&#x5F53;&#x524D;&#x653E;&#x5165;&#x961F;&#x5217;&#x5C3E;&#x90E8;&#x3002; enq(node); return node;} &#x6211;&#x4EEC;&#x518D;&#x56DE;&#x5230;acquire&#x65B9;&#x6CD5;&#x4E2D;&#x7684;acquireQueued&#x770B;&#x770B;&#x505A;&#x4E86;&#x4EC0;&#x4E48;12345678910111213141516171819202122232425final boolean acquireQueued(final Node node, int arg) { boolean failed = true; try { boolean interrupted = false; for (;;) { final Node p = node.predecessor(); //&#x5982;&#x679C;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x524D;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x518D;&#x6B21;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x9501;&#x3002; if (p == head &amp;&amp; tryAcquire(arg)) { //&#x5982;&#x679C;&#x83B7;&#x53D6;&#x5230;&#x9501;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x628A;head&#x8282;&#x70B9;&#x8BBE;&#x4E3A;&#x5F53;&#x524D;node setHead(node); p.next = null; // help GC failed = false; return interrupted; } if (shouldParkAfterFailedAcquire(p, node) &amp;&amp; //&#x68C0;&#x67E5;&#x524D;&#x51E0;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x72B6;&#x6001;&#x662F;&#x5426;&#x662F;SIGNAL&#xFF0C;&#x56E0;&#x6B64;&#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x6302;&#x8D77;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x3002; parkAndCheckInterrupt()) //&#x5229;&#x7528;LockSupport&#x5C06;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6302;&#x8D77;&#x3002; interrupted = true; } } finally { if (failed) cancelAcquire(node); }} &#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x7EBF;&#x7A0B;&#x8981;&#x4E48;&#x83B7;&#x53D6;&#x5230;&#x9501;&#xFF0C;&#x8981;&#x4E48;&#x5931;&#x8D25;&#xFF0C;&#x88AB;park&#x963B;&#x585E;&#x3002;&#x7531;&#x6B64;&#x53EF;&#x89C1;&#xFF0C;&#x5F53;&#x524D;&#x6301;&#x6709;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x653E;&#x5728;&#x961F;&#x5217;&#x7684;&#x5934;&#x91CC;&#x9762;&#x3002;&#x5982;&#x679C;&#x5F53;&#x524D;&#x6301;&#x6709;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x4E86;&#x600E;&#x4E48;&#x53BB;&#x6FC0;&#x6D3B;&#x961F;&#x5217;&#x91CC;&#x7684;&#x4E0B;&#x4E2A;&#x7EBF;&#x7A0B;&#x5462;&#xFF0C;&#x8FD9;&#x5C31;&#x8981;&#x7528;&#x5230;unlock()&#x4E86;&#x3002; 1234public void unlock() { sync.release(1); //&#x8FD8;&#x662F;&#x8C03;&#x7528;sync&#xFF0C;&#x5E76;&#x4E14;state&#x8BBE;&#x4E3A;1&#x3002; } 12345678910public final boolean release(int arg) { if (tryRelease(arg)) { Node h = head; if (h != null &amp;&amp; h.waitStatus != 0) //&#x8FD9;&#x91CC;&#x5C31;&#x4F1A;&#x53BB;&#x8C03;&#x7528;unpark&#x88AB;&#x963B;&#x585E;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E86; unparkSuccessor(h); return true; } return false;} &#x6211;&#x4EEC;&#x5148;&#x53BB;&#x770B;&#x770B;tryRelease&#x65B9;&#x6CD5;&#x3002;123456789101112protected final boolean tryRelease(int releases) { int c = getState() - releases; if (Thread.currentThread() != getExclusiveOwnerThread()) throw new IllegalMonitorStateException(); boolean free = false; if (c == 0) { //&#x56E0;&#x4E3A;&#x91CD;&#x5165;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x8BE5;&#x7EBF;&#x7A0B;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x8FD8;&#x6301;&#x6709;&#x9501;&#xFF0C;&#x90A3;&#x4E48;free&#x4F1A;&#x8FD4;&#x56DE;false&#xFF0C;&#x4E5F;&#x5C31;&#x4E0D;&#x4F1A;&#x53BB;&#x505A;&#x5524;&#x9192;&#x4E0B;&#x4E00;&#x4E2A;thread&#x7684;&#x64CD;&#x4F5C; free = true; setExclusiveOwnerThread(null); } setState(c); return free;} &#x518D;&#x770B;&#x770B;unparkSuccessor&#x65B9;&#x6CD5;&#x3002;12345678910111213141516171819202122232425262728private void unparkSuccessor(Node node) { /* * If status is negative (i.e., possibly needing signal) try * to clear in anticipation of signalling. It is OK if this * fails or if status is changed by waiting thread. */ int ws = node.waitStatus; if (ws &lt; 0) compareAndSetWaitStatus(node, ws, 0); /* * Thread to unpark is held in successor, which is normally * just the next node. But if cancelled or apparently null, * traverse backwards from tail to find the actual * non-cancelled successor. */ Node s = node.next; if (s == null || s.waitStatus &gt; 0) { s = null; for (Node t = tail; t != null &amp;&amp; t != node; t = t.prev) if (t.waitStatus &lt;= 0) s = t; } if (s != null) //&#x627E;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x7136;&#x540E;unpark. LockSupport.unpark(s.thread); }} &#x81F3;&#x4E8E;NonfairSync, &#x5B83;&#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x4F1A;&#x76F4;&#x63A5;&#x53BB;&#x62A2;&#x5360;&#x9501;&#xFF0C;&#x4E0D;&#x7528;&#x53BB;&#x7BA1;&#x524D;&#x9762;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x5728;&#x7B49;&#x5F85;&#x3002;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; final void lock() { if (compareAndSetState(0, 1)) setExclusiveOwnerThread(Thread.currentThread()); else acquire(1); }","raw":null,"content":null,"categories":[{"name":"Java Concurrency","slug":"Java-Concurrency","permalink":"http://www.iyu.io/categories/Java-Concurrency/"}],"tags":[{"name":"Java Concurrency","slug":"Java-Concurrency","permalink":"http://www.iyu.io/tags/Java-Concurrency/"}]},{"title":"Lock中的各种lock方法","slug":"Lock中的各种lock方法","date":"2016-05-29T07:00:33.000Z","updated":"2016-05-29T07:45:12.000Z","comments":true,"path":"2016/05/29/Lock中的各种lock方法/","link":"","permalink":"http://www.iyu.io/2016/05/29/Lock中的各种lock方法/","excerpt":"","keywords":null,"text":"&#x5982;&#x56FE;&#xFF0C;&#x5728;Lock&#x7C7B;&#x4E2D;&#x6709;&#x8FD9;&#x4E48;&#x591A;lock&#x65B9;&#x6CD5;&#xFF0C;&#x4ED6;&#x4EEC;&#x5206;&#x522B;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x5462;&#x3002; lock(), &#x6BD4;&#x8F83;&#x6D41;&#x6C13;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4E00;&#x76F4;&#x5C1D;&#x8BD5;&#x53BB;&#x83B7;&#x53D6;&#x9501;&#xFF0C;&#x4E0D;&#x54CD;&#x5E94;interrupt(). tryLock(), &#x9A6C;&#x4E0A;&#x8FD4;&#x56DE;&#xFF0C;&#x62FF;&#x5230;&#x9501;&#x5C31;&#x8FD4;&#x56DE;true&#xFF0C;&#x5426;&#x5219;false&#x3002; tryLock(long time, TimeUnit unit)&#xFF0C;&#x6BD4;&#x8F83;&#x806A;&#x660E;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F1A;&#x7B49;&#x5F85;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x8D85;&#x65F6;&#x5C31;&#x8FD4;&#x56DE;false&#x3002; lockInterruptibly(), &#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x65F6;&#xFF0C;&#x6536;&#x5230;interrupt&#x4F1A;&#x88AB;&#x5524;&#x9192;&#x5E76;&#x8981;&#x6C42;&#x53BB;&#x5904;&#x7406;interrupt exception. &#x4E0B;&#x9762;&#x5BF9;lock()&#x548C;lockInterruptibly()&#x4F5C;&#x4EE5;&#x4E0B;&#x6D4B;&#x8BD5;&#x3002; 1234567891011121314151617181920212223public class TestInterrupt { public static void main(String[] args) throws InterruptedException { final Lock lock = new ReentrantLock(); lock.lock(); Thread thd = new Thread( new Runnable() { @Override public void run() { System.out.println(&quot;About to lock&quot;); lock.lock(); System.out.println(&quot;lock aquired&quot;); } } , &quot;thread-interrupt&quot;); thd.start(); Thread.sleep(1000); thd.interrupt(); Thread.sleep(234234234); }} &#x901A;&#x8FC7;jstack&#x89C2;&#x5BDF;123456789101112&quot;thread-interrupt&quot; prio=5 tid=0x00007fc9898db800 nid=0x4d03 waiting on condition [0x0000700001149000] java.lang.Thread.State: WAITING (parking) at sun.misc.Unsafe.park(Native Method) - parking to wait for &lt;0x00000007d5660778&gt; (a java.util.concurrent.locks.ReentrantLock$NonfairSync) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186) at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834) at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867) at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197) at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:214) at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:290) at com.ulu.io.TestInterrupt$1.run(TestInterrupt.java:21) at java.lang.Thread.run(Thread.java:745) &#x8F93;&#x51FA;&#x5982;&#x4E0B;:1About to lock &#x5C06;lock&#x6362;&#x6210;lockInterruptibly&#x540E;:1234567891011121314151617181920212223242526public class TestInterrupt { public static void main(String[] args) throws InterruptedException { final Lock lock = new ReentrantLock(); lock.lock(); Thread thd = new Thread( new Runnable() { @Override public void run() { System.out.println(&quot;About to lock&quot;); try { lock.lockInterruptibly(); } catch (InterruptedException e) { System.out.println(&quot;Interrupted&quot;); } } } , &quot;thread-interrupt&quot;); thd.start(); Thread.sleep(1000); thd.interrupt(); Thread.sleep(234234234); }} &#x901A;&#x8FC7;jstack&#x89C2;&#x5BDF;&#x7EBF;&#x7A0B;&#x5DF2;&#x7ECF;&#x4E0D;&#x5B58;&#x5728;&#x4E86;&#x3002;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#xFF1A;12About to lockInterrupted","raw":null,"content":null,"categories":[{"name":"Java Concurrency","slug":"Java-Concurrency","permalink":"http://www.iyu.io/categories/Java-Concurrency/"}],"tags":[{"name":"Java Concurrency","slug":"Java-Concurrency","permalink":"http://www.iyu.io/tags/Java-Concurrency/"}]},{"title":"Java中的Atomic","slug":"Java中的Atomic","date":"2016-05-29T02:33:31.000Z","updated":"2016-05-29T02:58:54.000Z","comments":true,"path":"2016/05/29/Java中的Atomic/","link":"","permalink":"http://www.iyu.io/2016/05/29/Java中的Atomic/","excerpt":"","keywords":null,"text":"JDK 5&#x4E4B;&#x524D;&#x662F;&#x9760;Synchronized&#x6765;&#x4FDD;&#x8BC1;&#x540C;&#x6B65;&#x64CD;&#x4F5C;&#x7684;&#xFF0C;&#x867D;&#x7136;&#x53EF;&#x4EE5;&#x786E;&#x4FDD;&#x6B63;&#x786E;&#x6027;&#xFF0C;&#x4F46;&#x4E5F;&#x5E26;&#x6765;&#x4E86;&#x95EE;&#x9898;&#x3002; &#x9AD8;&#x5E76;&#x53D1;&#x4E0B;&#x541E;&#x5410;&#x91CF;&#x5927;&#x91CF;&#x4E0B;&#x964D;&#x3002; &#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x8017;&#x8D39;&#x5927;&#x91CF;&#x8D44;&#x6E90;&#x3002; &#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x6B7B;&#x9501;&#x3002; JDK 5&#x5229;&#x7528;&#x4E86;&#x73B0;&#x4EE3;&#x5904;&#x7406;&#x5668;&#x7684;CAS(compare and set)&#x539F;&#x8BED;&#x89E3;&#x51B3;&#x4E86;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002; CAS &#x64CD;&#x4F5C;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x64CD;&#x4F5C;&#x6570; &#x2014;&#x2014; &#x5185;&#x5B58;&#x4F4D;&#x7F6E;&#xFF08;V&#xFF09;&#x3001;&#x9884;&#x671F;&#x539F;&#x503C;&#xFF08;A&#xFF09;&#x548C;&#x65B0;&#x503C;(B)&#x3002;&#x5982;&#x679C;&#x5185;&#x5B58;&#x4F4D;&#x7F6E;&#x7684;&#x503C;&#x4E0E;&#x9884;&#x671F;&#x539F;&#x503C;&#x76F8;&#x5339;&#x914D;&#xFF0C;&#x90A3;&#x4E48;&#x5904;&#x7406;&#x5668;&#x4F1A;&#x81EA;&#x52A8;&#x5C06;&#x8BE5;&#x4F4D;&#x7F6E;&#x503C;&#x66F4;&#x65B0;&#x4E3A;&#x65B0;&#x503C;&#x3002;&#x5426;&#x5219;&#xFF0C;&#x5904;&#x7406;&#x5668;&#x4E0D;&#x505A;&#x4EFB;&#x4F55;&#x64CD;&#x4F5C;&#x3002;&#x65E0;&#x8BBA;&#x54EA;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5B83;&#x90FD;&#x4F1A;&#x5728; CAS &#x6307;&#x4EE4;&#x4E4B;&#x524D;&#x8FD4;&#x56DE;&#x8BE5;&#x4F4D;&#x7F6E;&#x7684;&#x503C;&#x3002;&#xFF08;&#x5728; CAS &#x7684;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#x4E0B;&#x5C06;&#x4EC5;&#x8FD4;&#x56DE; CAS &#x662F;&#x5426;&#x6210;&#x529F;&#xFF0C;&#x800C;&#x4E0D;&#x63D0;&#x53D6;&#x5F53;&#x524D;&#x503C;&#x3002;&#xFF09;CAS &#x6709;&#x6548;&#x5730;&#x8BF4;&#x660E;&#x4E86;&#x201C;&#x6211;&#x8BA4;&#x4E3A;&#x4F4D;&#x7F6E; V &#x5E94;&#x8BE5;&#x5305;&#x542B;&#x503C; A&#xFF1B;&#x5982;&#x679C;&#x5305;&#x542B;&#x8BE5;&#x503C;&#xFF0C;&#x5219;&#x5C06; B &#x653E;&#x5230;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF1B;&#x5426;&#x5219;&#xFF0C;&#x4E0D;&#x8981;&#x66F4;&#x6539;&#x8BE5;&#x4F4D;&#x7F6E;&#xFF0C;&#x53EA;&#x544A;&#x8BC9;&#x6211;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x73B0;&#x5728;&#x7684;&#x503C;&#x5373;&#x53EF;&#x3002;&#x201D;&#x901A;&#x5E38;&#x5C06; CAS &#x7528;&#x4E8E;&#x540C;&#x6B65;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x4ECE;&#x5730;&#x5740; V &#x8BFB;&#x53D6;&#x503C; A&#xFF0C;&#x6267;&#x884C;&#x591A;&#x6B65;&#x8BA1;&#x7B97;&#x6765;&#x83B7;&#x5F97;&#x65B0;&#x503C; B&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528; CAS &#x5C06; V &#x7684;&#x503C;&#x4ECE; A &#x6539;&#x4E3A; B&#x3002;&#x5982;&#x679C; V &#x5904;&#x7684;&#x503C;&#x5C1A;&#x672A;&#x540C;&#x65F6;&#x66F4;&#x6539;&#xFF0C;&#x5219; CAS &#x64CD;&#x4F5C;&#x6210;&#x529F;&#x3002;&#x7C7B;&#x4F3C;&#x4E8E; CAS &#x7684;&#x6307;&#x4EE4;&#x5141;&#x8BB8;&#x7B97;&#x6CD5;&#x6267;&#x884C;&#x8BFB;-&#x4FEE;&#x6539;-&#x5199;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x65E0;&#x9700;&#x5BB3;&#x6015;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x4FEE;&#x6539;&#x53D8;&#x91CF;&#xFF0C;&#x56E0;&#x4E3A;&#x5982;&#x679C;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x4FEE;&#x6539;&#x53D8;&#x91CF;&#xFF0C;&#x90A3;&#x4E48; CAS &#x4F1A;&#x68C0;&#x6D4B;&#x5B83;&#xFF08;&#x5E76;&#x5931;&#x8D25;&#xFF09;&#xFF0C;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x5BF9;&#x8BE5;&#x64CD;&#x4F5C;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x3002;&#x6E05;&#x5355; 3 &#x8BF4;&#x660E;&#x4E86; CAS &#x64CD;&#x4F5C;&#x7684;&#x884C;&#x4E3A;&#xFF08;&#x800C;&#x4E0D;&#x662F;&#x6027;&#x80FD;&#x7279;&#x5F81;&#xFF09;&#xFF0C;&#x4F46;&#x662F; CAS &#x7684;&#x4EF7;&#x503C;&#x662F;&#x5B83;&#x53EF;&#x4EE5;&#x5728;&#x786C;&#x4EF6;&#x4E2D;&#x5B9E;&#x73B0;&#xFF0C;&#x5E76;&#x4E14;&#x662F;&#x6781;&#x8F7B;&#x91CF;&#x7EA7;&#x7684;&#xFF08;&#x5728;&#x5927;&#x591A;&#x6570;&#x5904;&#x7406;&#x5668;&#x4E2D;&#xFF09;&#xFF1A; &#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;AtomicInteger&#x5982;&#x4F55;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002; 123456789public final int getAndSet(int newValue) { //&#x5FAA;&#x73AF;&#x68C0;&#x6D4B;&#x662F;&#x5426;&#x8BBE;&#x7F6E;&#x6210;&#x529F; for (;;) { int current = get(); //&#x8FD4;&#x56DE;true&#x5982;&#x679C;&#x5185;&#x5B58;&#x4E2D;&#x503C;&#x548C;current&#x76F8;&#x540C;&#x5E76;&#x8BBE;&#x5B9A;&#x6210;newValue if (compareAndSet(current, newValue)) return current; } } &#x63A5;&#x4E0B;&#x6765;&#x6765;&#x770B;compareAndSet&#x5982;&#x4F55;&#x5B9E;&#x73B0;1234public final boolean compareAndSet(int expect, int update) { //&#x8FD9;&#x91CC;&#x8C03;&#x7528;&#x4E86;unsafe&#x7684;compareAndSwapInt&#x65B9;&#x6CD5; return unsafe.compareAndSwapInt(this, valueOffset, expect, update); } unsafe&#x7684;compareAndSwapInt&#x901A;&#x8FC7;JNI&#x8C03;&#x7528;&#x4E86;&#x5E95;&#x5C42;C&#x5B9E;&#x73B0;&#x3002;1public final native boolean compareAndSwapInt(Object var1, long var2, int var4, int var5);","raw":null,"content":null,"categories":[{"name":"Java Concurrency","slug":"Java-Concurrency","permalink":"http://www.iyu.io/categories/Java-Concurrency/"}],"tags":[{"name":"Java Concurrency","slug":"Java-Concurrency","permalink":"http://www.iyu.io/tags/Java-Concurrency/"}]},{"title":"运行tomcat7源代码（Tomcat源代码学习之一）","slug":"运行tomcat7源代码（Tomcat源代码学习之一）","date":"2016-05-25T07:33:24.000Z","updated":"2016-05-25T08:28:08.000Z","comments":true,"path":"2016/05/25/运行tomcat7源代码（Tomcat源代码学习之一）/","link":"","permalink":"http://www.iyu.io/2016/05/25/运行tomcat7源代码（Tomcat源代码学习之一）/","excerpt":"","keywords":null,"text":"&#x7EB8;&#x4E0A;&#x5F97;&#x6765;&#x7EC8;&#x89C9;&#x6D45;&#xFF0C;&#x7EDD;&#x77E5;&#x6B64;&#x4E8B;&#x8981;&#x8EAC;&#x884C;&#x3002; &#x4E3A;&#x4E86;&#x7763;&#x4FC3;&#x81EA;&#x5DF1;&#x6DF1;&#x5165;&#x4E86;&#x89E3;tomcat&#xFF0C;&#x56E0;&#x6709;&#x6B64;&#x7CFB;&#x5217;&#xFF0C;&#x5927;&#x591A;&#x662F;&#x62FE;&#x4EBA;&#x7259;&#x60E0;&#xFF0C;&#x5927;&#x5BB6;&#x522B;&#x89C1;&#x7B11;&#x3002; &#x5982;&#x4F55;&#x8FD0;&#x884C;tomcat7&#xFF0C;&#x5DF2;&#x6709;&#x5927;&#x795E;&#x5217;&#x51FA;&#x8BE6;&#x7EC6;&#x6B65;&#x9AA4;&#x3002;&#x5728;IntelliJ IDEA &#x548C; Eclipse&#x8FD0;&#x884C;tomcat 7&#x6E90;&#x4EE3;&#x7801;&#xFF08;Tomcat&#x6E90;&#x4EE3;&#x7801;&#x9605;&#x8BFB;&#x7CFB;&#x5217;&#x4E4B;&#x4E00;&#xFF09; &#x6587;&#x4E2D;&#x63D0;&#x5230;&#x7528;org.apache.catalina.startup.Bootstrap&#x6765;&#x542F;&#x52A8;&#x4EE3;&#x7801;&#x3002;&#x5176;&#x5B9E;&#x5728;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x4E2D;&#x6211;&#x4EEC;&#x7528;startup.sh&#x6765;&#x542F;&#x52A8;&#xFF0C;&#x4E5F;&#x662F;&#x95F4;&#x63A5;&#x8C03;&#x7528;&#x4E86;&#x8FD9;&#x4E2A;&#x7C7B;&#x542F;&#x52A8;&#x5462;&#x3002; startup.shTomcat&#x7684;startup.sh&#x4E3B;&#x8981;&#x662F;&#x7528;&#x6765;&#x627E;&#x5230;catalina.sh&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x6267;&#x884C;&#x6743;&#x9650;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x542F;&#x52A8;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x5B83;&#x6267;&#x884C;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5728;&#x542F;&#x52A8;tomcat&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x5B9E;&#x76F4;&#x63A5;&#x8C03;&#x7528;catalina.sh&#x529F;&#x80FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002; catalina.sh&#x8FD9;&#x91CC;&#x5C31;&#x6765;&#x5230;&#x4E86;tomcat&#x542F;&#x52A8;&#x7684;&#x91CD;&#x5934;&#x620F;&#x4E86;&#x3002; &#x91CD;&#x5199;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x548C;&#x542F;&#x52A8;&#x53C2;&#x6570;,&#x5982;&#x679C;&#x4F60;&#x5BF9;&#x542F;&#x52A8;&#x7684;&#x591A;&#x4E2A;instance&#x5206;&#x522B;&#x914D;&#x7F6E;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x5728;&#x8FD9;&#x91CC;&#x3002;JRE_HOME JRE&#x76EE;&#x5F55;CATALINA_HOME Tomcat&#x76EE;&#x5F55;JAVA_OPTS &#x542F;&#x52A8;&#x53C2;&#x6570;&#xFF0C;JVM&#x914D;&#x7F6E;&#xFF0C;GClog&#x914D;&#x7F6E;&#x7B49;&#x3002; setenv.sh, bin&#x4E0B;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x5199;&#x5728;&#x8FD9;&#x91CC;&#x3002; 12345if&#xA0;[&#xA0;-r&#xA0;&quot;$CATALINA_BASE/bin/setenv.sh&quot;&#xA0;];&#xA0;then&#xA0;&#xA0;.&#xA0;&quot;$CATALINA_BASE/bin/setenv.sh&quot;elif&#xA0;[&#xA0;-r&#xA0;&quot;$CATALINA_HOME/bin/setenv.sh&quot;&#xA0;];&#xA0;then&#xA0;&#xA0;.&#xA0;&quot;$CATALINA_HOME/bin/setenv.sh&quot;fi &#x4E0B;&#x9762;&#x5C31;&#x662F;&#x5177;&#x4F53;&#x7684;Bootstrap&#x7C7B;&#x7684;&#x8C03;&#x7528;&#x5566;&#x3002; 123456789101112131415161718192021if [ &quot;$1&quot; = &quot;-security&quot; ] ; then if [ $have_tty -eq 1 ]; then echo &quot;Using Security Manager&quot; fi shift eval exec \\&quot;$_RUNJAVA\\&quot; \\&quot;$LOGGING_CONFIG\\&quot; $LOGGING_MANAGER $JAVA_OPTS $CATALINA_OPTS \\ -Djava.endorsed.dirs=\\&quot;$JAVA_ENDORSED_DIRS\\&quot; -classpath \\&quot;$CLASSPATH\\&quot; \\ -Djava.security.manager \\ -Djava.security.policy==\\&quot;$CATALINA_BASE/conf/catalina.policy\\&quot; \\ -Dcatalina.base=\\&quot;$CATALINA_BASE\\&quot; \\ -Dcatalina.home=\\&quot;$CATALINA_HOME\\&quot; \\ -Djava.io.tmpdir=\\&quot;$CATALINA_TMPDIR\\&quot; \\ org.apache.catalina.startup.Bootstrap &quot;$@&quot; start else eval exec \\&quot;$_RUNJAVA\\&quot; \\&quot;$LOGGING_CONFIG\\&quot; $LOGGING_MANAGER $JAVA_OPTS $CATALINA_OPTS \\ -Djava.endorsed.dirs=\\&quot;$JAVA_ENDORSED_DIRS\\&quot; -classpath \\&quot;$CLASSPATH\\&quot; \\ -Dcatalina.base=\\&quot;$CATALINA_BASE\\&quot; \\ -Dcatalina.home=\\&quot;$CATALINA_HOME\\&quot; \\ -Djava.io.tmpdir=\\&quot;$CATALINA_TMPDIR\\&quot; \\ org.apache.catalina.startup.Bootstrap &quot;$@&quot; start fi","raw":null,"content":null,"categories":[{"name":"Tomcat","slug":"Tomcat","permalink":"http://www.iyu.io/categories/Tomcat/"}],"tags":[{"name":"Tomcat","slug":"Tomcat","permalink":"http://www.iyu.io/tags/Tomcat/"}]},{"title":"在Mac Mini 2014下安装Ubuntu 16.04","slug":"在Mac-Mini-2014下安装Ubuntu-16-04","date":"2016-05-24T16:07:19.000Z","updated":"2016-05-24T16:35:31.000Z","comments":true,"path":"2016/05/25/在Mac-Mini-2014下安装Ubuntu-16-04/","link":"","permalink":"http://www.iyu.io/2016/05/25/在Mac-Mini-2014下安装Ubuntu-16-04/","excerpt":"","keywords":null,"text":"&#x5BB6;&#x91CC;&#x95F2;&#x7F6E;&#x4E86;&#x4E00;&#x53F0;Mac Mini 2014&#xFF0C;&#x81EA;&#x5DF1;&#x52A8;&#x624B;&#x628A;&#x786C;&#x76D8;&#x6362;&#x6389;&#x6210;SSD&#xFF08;&#x8BB0;&#x5F97;&#x4E00;&#x5B9A;&#x8981;&#x53BB;&#x627E;&#x90A3;&#x79CD;Mac Mini&#x4E13;&#x7528;&#x7684;&#x87BA;&#x4E1D;&#x5200;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x4E0D;&#x80FD;&#x7528;&#xFF0C;&#x79FB;&#x52A8;&#x4E3B;&#x677F;&#x7684;&#x94C1;&#x4E1D;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x505A;&#xFF0C;&#x4E0D;&#x8981;&#x53BB;&#x82B1;&#x51A4;&#x6789;&#x94B1;&#xFF09;&#xFF0C;&#x5C31;&#x5F00;&#x59CB;&#x88C5;Ubuntu&#x4E86;&#x3002;Ubuntu&#x652F;&#x6301;Mac&#x7684;UEFI&#x5206;&#x533A;&#xFF0C;&#x5B89;&#x88C5;&#x5341;&#x5206;&#x7B80;&#x5355;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x4E00;&#x6B21;&#x6210;&#x529F;&#x3002; &#x4E0B;&#x8F7D;ISO&#x53BB;Ubuntu&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;ISO&#x6587;&#x4EF6;&#xFF0C;&#xFF08;Ubuntu&#x7684;&#x955C;&#x50CF;&#x901F;&#x5EA6;&#x6760;&#x6760;&#x7684;&#xFF09;&#x3002;http://www.ubuntu.org.cn Burn&#x955C;&#x50CF;&#x5230;U&#x76D8;&#x4EE5;&#x4E0B;&#x64CD;&#x4F5C;&#x662F;&#x5728;Mac&#x4E0B;&#x64CD;&#x4F5C;&#x7684;&#xFF0C;windows&#x8BF7;&#x81EA;&#x884C;&#x641C;&#x7D22;&#x3002; &#x7528;Mac&#x81EA;&#x5E26;&#x5DE5;&#x5177;Disk Utility&#x683C;&#x5F0F;&#x5316;U&#x76D8;&#x3002; &#x628A;ISO&#x8F6C;&#x6362;&#x6210;img&#x683C;&#x5F0F;,&#x5982;&#x679C;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x6709;dmg&#x540E;&#x7F00;&#xFF0C;&#x9700;&#x8981;&#x53BB;&#x6389;&#x3002;$ hdiutil convert -format UDRW -o ubuntu.img ubuntu.iso 12345678910111213Reading Driver Descriptor Map (DDM : 0)&#x2026;`Reading Ubuntu 16.04 LTS amd64 (Apple_ISO : 1)&#x2026;Reading Apple (Apple_partition_map : 2)&#x2026;Reading Ubuntu 16.04 LTS amd64 (Apple_ISO : 3)&#x2026;.................................................................................................................................................................................Reading EFI (Apple_HFS : 4)&#x2026;.................................................................................................................................................................................Reading Ubuntu 16.04 LTS amd64 (Apple_ISO : 5)&#x2026;.................................................................................................................................................................................Elapsed Time: 4.545sSpeed: 311.7Mbytes/secSavings: 0.0%created: /Users/iyu/Downloads/ubuntu.img.dmg &#x67E5;&#x770B;&#x5F53;&#x524D;U&#x76D8;&#x7684;&#x76D8;&#x7B26;&#xFF0C;&#x8B6C;&#x5982;&#x8BF4;&#x4E0B;&#x9762;&#x7684;/dev/disk2$ diskutil list 1234567891011121314151617`/dev/disk0 (internal, physical):# : TYPE NAME SIZE IDENTIFIER 0: GUID_partition_scheme *251.0 GB disk0 1: EFI EFI 209.7 MB disk0s1 2: Apple_CoreStorage Macintosh HD 250.1 GB disk0s2 3: Apple_Boot Recovery HD 650.0 MB disk0s3/dev/disk1 (internal, virtual):# : TYPE NAME SIZE IDENTIFIER 0: Apple_HFS Macintosh HD +249.8 GB disk1 Logical Volume on disk0s2 DB53ACE5-85A0-465D-A6DA-65235EFF05D1 Unlocked Encrypted/dev/disk2 (external, physical):# : TYPE NAME SIZE IDENTIFIER 0: GUID_partition_scheme *15.7 GB disk2 1: EFI EFI 209.7 MB disk2s1 2: Apple_HFS Ubuntu 15.4 GB disk2s2 Unmount U&#x76D8;&#xFF0C;&#x8BB0;&#x5F97;&#x7528;&#x4E0A;&#x9762;&#x627E;&#x5230;&#x7684;U&#x76D8;&#x7B26;$ diskutil unmountDisk /dev/disk2 1Unmount of all volumes on disk2 was successful &#x955C;&#x50CF;&#x5199;&#x5165;U&#x76D8;&#xFF0C;&#x8FD9;&#x4E2A;&#x9700;&#x8981;&#x82B1;&#x8D39;&#x70B9;&#x65F6;&#x95F4;&#xFF0C;&#x8FD9;&#x6BB5;&#x65F6;&#x95F4;&#x53EF;&#x4EE5;&#x53BB;&#x505A;&#x70B9;&#x5176;&#x4ED6;&#x4E8B;&#x60C5;&#xFF0C;&#x514D;&#x5F97;&#x8BEF;&#x64CD;&#x4F5C;&#x5F71;&#x54CD;&#x4E86;&#x5199;&#x5165;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;1.4G&#x7684;&#x955C;&#x50CF;&#x5199;&#x4E86;18&#x5206;&#x949F;&#x591A;&#x3002;$ sudo dd if=/Downloads/ubuntu.img of=/dev/disk2 bs=1m 1234Password:1417+1 records in1417+1 records out1485881344 bytes transferred in 1092.192900 secs (1360457 bytes/sec) &#x6267;&#x884C;&#x5B89;&#x88C5;&#x6700;&#x540E;&#x5C06;U&#x76D8;&#x63D2;&#x5165;Mac&#xFF0C;&#x5F00;&#x673A;&#x7684;&#x65F6;&#x5019;&#x6309;&#x4F4F;Opt&#x952E;&#xFF0C;&#x5C31;&#x8FDB;&#x5165;U&#x76D8;&#x9009;&#x62E9;&#xFF0C;&#x8BB0;&#x5F97;&#x9009;&#x62E9;UEFI&#xFF0C;&#x91CC;&#x9762;&#x6709;&#x63D0;&#x793A;&#x53BB;&#x5B89;&#x88C5;Ubuntu&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x8FC7;&#x7A0B;&#x6309;&#x7167;&#x9ED8;&#x8BA4;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x6BD4;&#x88C5;windows&#x8FD8;&#x7B80;&#x5355;&#x3002;","raw":null,"content":null,"categories":[{"name":"linux","slug":"linux","permalink":"http://www.iyu.io/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.iyu.io/tags/linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.iyu.io/tags/Ubuntu/"},{"name":"Install","slug":"Install","permalink":"http://www.iyu.io/tags/Install/"}]},{"title":"hello world","slug":"hello-world","date":"2016-04-15T09:28:20.000Z","updated":"2016-05-24T16:31:13.000Z","comments":true,"path":"2016/04/15/hello-world/","link":"","permalink":"http://www.iyu.io/2016/04/15/hello-world/","excerpt":"","keywords":null,"text":"Hi guys. Here is my blog created with hexo and Icarus Theme (Thank for your great work that saving me so much time). I will share my technical experience of Java/C/Oracle/MySQL here. And your suggestions also welcome here.","raw":null,"content":null,"categories":[],"tags":[]}]}